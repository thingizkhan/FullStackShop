{"ast":null,"code":"import React,{useState}from'react';import{useNavigate}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function AdminLogin(){const[formData,setFormData]=useState({username:'',password:''});const navigate=useNavigate();const handleChange=e=>{const{name,value}=e.target;setFormData({...formData,[name]:value});};const handleSubmit=async e=>{e.preventDefault();try{const response=await fetch('/api/admin/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(formData)});const result=await response.json();console.log(result);if(result.isAdmin){localStorage.setItem('username',JSON.stringify(formData.username));localStorage.setItem('password',JSON.stringify(formData.password));navigate('/admin');}else{alert('Invalid credentials');}}catch(error){console.error('Error:',error);}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Admin Login\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Username:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"username\",value:formData.username,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Password:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:formData.password,onChange:handleChange,required:true})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Login\"})]})]});}export default AdminLogin;","map":{"version":3,"names":["React","useState","useNavigate","jsx","_jsx","jsxs","_jsxs","AdminLogin","formData","setFormData","username","password","navigate","handleChange","e","name","value","target","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","result","json","console","log","isAdmin","localStorage","setItem","alert","error","children","onSubmit","type","onChange","required"],"sources":["/Users/kamilatak/web/client/src/components/AdminLogin.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction AdminLogin() {\n    const [formData, setFormData] = useState({\n        username: '',\n        password: ''\n    });\n    const navigate = useNavigate();\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setFormData({\n            ...formData,\n            [name]: value\n        });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            const response = await fetch('/api/admin/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(formData)\n            });\n            const result = await response.json();\n            console.log(result);\n\n            if (result.isAdmin) {\n                localStorage.setItem('username', JSON.stringify(formData.username));\n                localStorage.setItem('password', JSON.stringify(formData.password));\n                navigate('/admin');\n            } else {\n                alert('Invalid credentials');\n            }\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Admin Login</h2>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label>Username:</label>\n                    <input type=\"text\" name=\"username\" value={formData.username} onChange={handleChange} required />\n                </div>\n                <div>\n                    <label>Password:</label>\n                    <input type=\"password\" name=\"password\" value={formData.password} onChange={handleChange} required />\n                </div>\n                <button type=\"submit\">Login</button>\n            </form>\n        </div>\n    );\n}\n\nexport default AdminLogin;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,kBAAkB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/C,QAAS,CAAAC,UAAUA,CAAA,CAAG,CAClB,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGR,QAAQ,CAAC,CACrCS,QAAQ,CAAE,EAAE,CACZC,QAAQ,CAAE,EACd,CAAC,CAAC,CACF,KAAM,CAAAC,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAW,YAAY,CAAIC,CAAC,EAAK,CACxB,KAAM,CAAEC,IAAI,CAAEC,KAAM,CAAC,CAAGF,CAAC,CAACG,MAAM,CAChCR,WAAW,CAAC,CACR,GAAGD,QAAQ,CACX,CAACO,IAAI,EAAGC,KACZ,CAAC,CAAC,CACN,CAAC,CAED,KAAM,CAAAE,YAAY,CAAG,KAAO,CAAAJ,CAAC,EAAK,CAC9BA,CAAC,CAACK,cAAc,CAAC,CAAC,CAClB,GAAI,CACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,kBAAkB,CAAE,CAC7CC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACL,cAAc,CAAE,kBACpB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAClB,QAAQ,CACjC,CAAC,CAAC,CACF,KAAM,CAAAmB,MAAM,CAAG,KAAM,CAAAP,QAAQ,CAACQ,IAAI,CAAC,CAAC,CACpCC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC,CAEnB,GAAIA,MAAM,CAACI,OAAO,CAAE,CAChBC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAER,IAAI,CAACC,SAAS,CAAClB,QAAQ,CAACE,QAAQ,CAAC,CAAC,CACnEsB,YAAY,CAACC,OAAO,CAAC,UAAU,CAAER,IAAI,CAACC,SAAS,CAAClB,QAAQ,CAACG,QAAQ,CAAC,CAAC,CACnEC,QAAQ,CAAC,QAAQ,CAAC,CACtB,CAAC,IAAM,CACHsB,KAAK,CAAC,qBAAqB,CAAC,CAChC,CACJ,CAAE,MAAOC,KAAK,CAAE,CACZN,OAAO,CAACM,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,CAClC,CACJ,CAAC,CAED,mBACI7B,KAAA,QAAA8B,QAAA,eACIhC,IAAA,OAAAgC,QAAA,CAAI,aAAW,CAAI,CAAC,cACpB9B,KAAA,SAAM+B,QAAQ,CAAEnB,YAAa,CAAAkB,QAAA,eACzB9B,KAAA,QAAA8B,QAAA,eACIhC,IAAA,UAAAgC,QAAA,CAAO,WAAS,CAAO,CAAC,cACxBhC,IAAA,UAAOkC,IAAI,CAAC,MAAM,CAACvB,IAAI,CAAC,UAAU,CAACC,KAAK,CAAER,QAAQ,CAACE,QAAS,CAAC6B,QAAQ,CAAE1B,YAAa,CAAC2B,QAAQ,MAAE,CAAC,EAC/F,CAAC,cACNlC,KAAA,QAAA8B,QAAA,eACIhC,IAAA,UAAAgC,QAAA,CAAO,WAAS,CAAO,CAAC,cACxBhC,IAAA,UAAOkC,IAAI,CAAC,UAAU,CAACvB,IAAI,CAAC,UAAU,CAACC,KAAK,CAAER,QAAQ,CAACG,QAAS,CAAC4B,QAAQ,CAAE1B,YAAa,CAAC2B,QAAQ,MAAE,CAAC,EACnG,CAAC,cACNpC,IAAA,WAAQkC,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,OAAK,CAAQ,CAAC,EAClC,CAAC,EACN,CAAC,CAEd,CAEA,cAAe,CAAA7B,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}